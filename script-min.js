class Circle{constructor(e){this.radius=e}get Radius(){return`радіус ${this.radius} см`}set Radius(e){this.radius=e}get diameter(){return`діамет ${2*this.radius} см`}circleArea(){return`площа кола ${this.radius**2*3.14} см`}circleLength(){return`довжина кола ${2*this.radius*3.14} см`}}const myCircle=new Circle(15);console.log(myCircle.radius),myCircle.radius=35,console.log(myCircle.radius),console.log(myCircle.diameter),console.log(myCircle.circleArea()),console.log(myCircle.circleLength());class Marker{constructor(e,r){this.color=e,this.inkLevel=r}write(e){let r="";for(let l=0;l<e.length;l++)" "!==e[l]&&this._inkLevel>0?(r+=e[l],this._inkLevel-=.5):r+=" ";console.log(`[${this._color}]: ${r}`)}}class Marker{constructor(e,r){this._color=e,this._inkLevel=r}write(e){let r="";for(let l=0;l<e.length;l++)" "!==e[l]&&this._inkLevel>0?(r+=e[l],this._inkLevel-=.5):r+=" ";console.log(`[${this._color}]: ${r}`)}}class RefillableMarker extends Marker{refill(e){this._inkLevel+=e,console.log(`Маркер перезаправлений. Поточний рівень чорнила: ${this._inkLevel}%`)}}const marker=new Marker("синій",50);marker.write("Привіт, світ!");const refillableMarker=new RefillableMarker("червоний",20);refillableMarker.write("Це маркер, який можна перезаправляти."),refillableMarker.refill(50),refillableMarker.write("ти перезаправив!");